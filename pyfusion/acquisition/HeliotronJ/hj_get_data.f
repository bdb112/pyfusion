c *** program for loading data of mp fast sampling           ***
c *** connection to IDL                                      *** 
c *** In the IDLprogram, you have to use "spawn, 'load_pmp'" ***
c *** programed by S. Yamamoto on Feb. 14, 2005              ***
c *** hacked by D. Pretty on Feb.  2008                      ***
c * Boyd fixed it (argument list subtleties, made it pass directly
C * but even so, it takes ~1 sec per channel, compared to a fraction
C * when reading from npz files with the same data
      subroutine gethjdata (ishotno,lendata,chname,verbose,
     $     opt, outname,outdata,n)
       implicit real (a-h,o-z)
c *** Note that the array size (n) is an argument generated by f2py 
       integer verbose, opt
       real outdata(n)
cf2py  intent(in,out,copy) :: outdata
cxxf2py intent(callback) getdata  ! doesn't make sense Dave?
       external getdata
       integer nch,lendata
       character*100 outname
       character*100 chname
c
c *** define array and parameter ***
c      dimension dataary(nch,lendata),
       parameter (len_alloc=1000000)
       dimension tary(len_alloc)
       dimension tmpary(len_alloc)
       integer iadc_bit,iampfilt,ishotno
       integer ibhv,ibta,ibtb,ibav,ibiv
       integer ich,isample,iswch
       integer ierror
c       character*16 signalnm(nch),modulenm
      character*16 signalnm,modulenm
      character*100 paneldt
      character*21 datascl,dataunit
      character*6 stime
      character*9 sdate
c looks like chname is a null terminated string, need to strip in fortran      
      if (verbose .gt. 2) then
         print *,'fortran:'
     +        ,n , 'elts, hj_get_data for '
     +        // trim(chname) 
         if (opt .le. 0) then
            print * , ', will write to ' // trim(outname)
         else
            print *, 'not writing file - returning argument directly'
         endif
      endif
c
      iswch=1
c
c *** load data ***
c      do 100 i=1,14
      call getdata(chname,modulenm,paneldt,datascl,dataunit,sdate,
     &  stime,tmpary,tary,tsamp,tdelay,ampgain,sc_max,sc_min,bitzero,
     &  iadc_bit,iampfile,ishotno,ibhv,ibta,ibtb,ibav,ibiv,
     &  ich,isample,iswch,ierror)
c        do 200 j=1,262144
c            dataary(i,j) = tmpary(j)
c  200   continue
c  100 continue
c
c *** check error ***
      if(ierror.ne.0)
     $     print *, '**Heliotron data NOT found, chname=', chname,
     $     ', ierror=',ierror, 'opt = ', opt
      if(ierror.eq.0 .and. verbose .gt. 0)
     $     write(6,*) 'Heliotron data found'
c
c *** write data ***
      if (opt .le. 0) then
         open(21, file=outname)
         if (verbose .gt. 3) print *,isample,'samples, writing to file'
     $     // trim(outname)
      endif
      do 300 jt=1,isample
         if (opt .le. 0) write(21,*), tary(jt), tmpary(jt)
         if (jt .le. n/2) then
            outdata(2*jt)=tary(jt)
            outdata(2*jt+1)=tmpary(jt)
         endif
 300  continue
      if (opt .le. 0) close(21)
c      common /data/ iswch
c      print*, "iswch=",iswch
c
c *** stop program ***
      end
c
