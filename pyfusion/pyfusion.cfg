#
# Pyfusion configuration file.
#
# You can create your own custom
# config file in $HOME/.pyfusion/pyfusion.cfg
#  
# Any custom settings are read in last, so will
# override settings here.
# Don't use quotes around strings!

[global]
## if database = None then sqlalchemy is not used. This is faster, but pyfusion will not store any data.
database = None
DAPATH = /hdd2/data/datamining/DA/
# this should be empty and be overridden by .pyfusion/pyfusion.cfg
localdatapath=
## use sql but only in RAM (not stored after python session)
# database = sqlite:///:memory:
## use mysql to store data
# database = mysql://username:password@localhost/mydatabase
## For other database examples, see: http://www.sqlalchemy.org/docs/05/dbengine.html#create-engine-url-arguments
# this goes into the filepath of each diagnostic
local_diag_path = None
LHDtmpdata = %(my_tmp)s/LHDtmpdata
# define in [global] in personal (or site-specific) copy ~/.pyfusion/pyfusion.cfg

[DEFAULT]
# try to put as few as possible here
LHDfetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
HJfetcher = pyfusion.acquisition.HeliotronJ.fetch.HeliotronJDataFetcher
my_tmp = /tmp  
H1fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
W7Xfetcher = pyfusion.acquisition.W7X.fetch.W7XDataFetcher
ne_path = \h1data::top.electr_dens.NE_HET
# this allows for the extra ~ 7Ohms in the four wire measurment, and the 10x Gain.
#  1Ohm = 0.0287 A  error when I looked at the wrong calibration shot.
1Ohm = 0.1 A
##########################
### Test Configuration ###
##########################
[Device:TestDevice]
dev_class = pyfusion.devices.base.Device
acq_name = fake_acq

[Acquisition:fake_acq]
acq_class = pyfusion.acquisition.FakeData.acq.FakeDataAcquisition

###################
### W7-X  ###
###################
[Device:W7X]
dev_class = pyfusion.devices.W7X.device.W7X
acq_name = W7X

[Acquisition:W7X]
acq_class = pyfusion.acquisition.W7X.acq.W7XAcquisition
# comment out all fmt when offline to avoid waiting for non-existent urls
#fmt = http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.{CDS}/DataModuleDesc.{DMD}_DATASTREAM/{ch}/Channel_{ch}/scaled/_signal.json?from={shot_f}&upto={shot_t}
#&nSamples=10000
# this is the equivalent raw format - only integers, so not much use
#fmt = http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/raw/W7X/CoDaStationDesc.{CDS}/DataModuleDesc.{DMD}_DATASTREAM/{ch}/Channel_{ch}/_signal.json?from={shot_f}&upto={shot_t}&nSamples=10000
#&skip=150500
repair=2
gain=0.01 A
#gain=0.0182 A  # error due to wrong calibration
#http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.82
#fmt = file:///data/databases/W7X/cache/archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.{CDS}/DataModuleDesc.{DMD}_DATASTREAM/{ch}/Channel_{ch}/scaled/_signal.json?from={shot_f}&upto={shot_t}
# the raw path is similar to codac, but needs .scaled. in the path
# Name the probes according to the LIMITER number (5) and segment (3,7)
# module 5, limiter sectors 3 and 7  L3_01,,,, or L7 (limiter segment) 

# Not confirmed as Mirnov yet, but looks right - see Michael Endler
[Diagnostic:W7X_MIR_32]
data_fetcher = %(W7Xfetcher)s
params = ch=31,ch1=32
gain = 1 V
offset = -12100 
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_MIR_31]
data_fetcher = %(W7Xfetcher)s
params = ch=30,ch1=31
gain = 1 V
offset = -12100 
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_MIR_30]
data_fetcher = %(W7Xfetcher)s
params = ch=29,ch1=30
gain = 1 V
offset = -12100 
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_MIR_29]
data_fetcher = %(W7Xfetcher)s
params = ch=28,ch1=29
gain = 1 V
offset = -12100 
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_15]
data_fetcher = %(W7Xfetcher)s
params = ch=14,ch1=15
gain = 1 V
offset = -12100 
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_14]
data_fetcher = %(W7Xfetcher)s
params = ch=13,ch1=14
gain = 1 V
offset = -12100
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_13]
data_fetcher = %(W7Xfetcher)s
params = ch=12,ch1=13
gain = 1 V
offset = -12100
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_12]
data_fetcher = %(W7Xfetcher)s
params = ch=11,ch1=12
gain = 1 V
offset = -12100
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_11]
data_fetcher = %(W7Xfetcher)s
params = ch=10,ch1=11
gain = 1 V
offset = -12100
fmt=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16007/DataReductionProcessDesc.17547_DATASTREAM/{ch}/QME-ch{ch1}/

[Diagnostic:W7X_ECE_axis]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_ECE_12
channel_1 = W7X_ECE_13
channel_2 = W7X_ECE_14


[Diagnostic:W7X_TotECH]
data_fetcher = %(W7Xfetcher)s
gain = 1 kW
#http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB//codac/W7X/CBG_ECRH/TotalPower_DATASTREAM/0/Ptot_ECRH/_signal.html?from
url=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB//codac/W7X/CBG_ECRH/TotalPower_DATASTREAM/0/Ptot_ECRH/scaledADC/

[Diagnostic:W7X_neL]
data_fetcher = %(W7Xfetcher)s
gain = 1 
url=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/codac/W7X/CoDaStationDesc.16339/DataModuleDesc.16341_DATASTREAM/0/Line%20integrated%20density/


[Diagnostic:W7X_Mag]
data_fetcher = %(W7Xfetcher)s
#url=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/views/KKS/QXG_Magnetics/QXG12ET001/Reduced_Data/QXS10CE210x/
# this works for 0209 35,36,37
url=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/raw/W7X/CoDaStationDesc.17499/DataReductionProcessDesc.17767_DATASTREAM/0/QXS10CE210x/
# below seems there,but isn't
#url=http://archive-webapi.ipp-hgw.mpg.de/ArchiveDB/raw/W7X/CoDaStationDesc.17515/DataModuleDesc.17524_DATASTREAM/16/channel16/

[Diagnostic:W7X_L57_LP1_U]
repair=2
gain = 10 V
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=0

[Diagnostic:W7X_L57_LP1_I]
repair=2
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=1

# un-repaired
[Diagnostic:W7X_L57_LP1_U0]
gain = 10 V
repair=1
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=0

[Diagnostic:W7X_L57_LP1_I0]
repair=1
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=1

[Diagnostic:W7X_L57_LP2_I]
sweep = W7X_L57_LP1_U
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=2

[Diagnostic:W7X_L57_LP3_I]
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=2

[Diagnostic:W7X_L57_LP4_I]
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=3

[Diagnostic:W7X_L57_LP5_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=4

[Diagnostic:W7X_L57_LP6_I]
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=5

[Diagnostic:W7X_L57_LP7_I]
sweep = W7X_L57_LP1_U
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=6

[Diagnostic:W7X_L57_LP8_I]
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=7

[Diagnostic:W7X_L57_LP9_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=0

[Diagnostic:W7X_L57_LP10_I]
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=1

#[Diagnostic:W7X_L57_LP11_I]
#data_fetcher = %(W7Xfetcher)s
#params = CDS=82,DMD=182,ch=2

#[Diagnostic:W7X_L57_LP12_I]
#data_fetcher = %(W7Xfetcher)s
#params = CDS=82,DMD=182,ch=3

[Diagnostic:W7X_L57_LP13_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=2

[Diagnostic:W7X_L57_LP14_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=3

[Diagnostic:W7X_L57_LP15_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=4

[Diagnostic:W7X_L57_LP16_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=5

[Diagnostic:W7X_L57_LP17_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=6

[Diagnostic:W7X_L57_LP18_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=182,ch=7

# Kaput
[Diagnostic:W7X_L57_LP19_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=0

[Diagnostic:W7X_L57_LP20_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=1

[Diagnostic:W7X_L57_LP21_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=2

[Diagnostic:W7X_L57_LP22_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=3

# Upper Limiter

[Diagnostic:W7X_L53_LP1_U]
gain = 10 V
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=192,ch=4

[Diagnostic:W7X_L53_LP1_I]
# Looks wrong but OK
sweep = W7X_L57_LP1_U
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=4

[Diagnostic:W7X_L53_LP2_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=5

[Diagnostic:W7X_L53_LP3_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=6

[Diagnostic:W7X_L53_LP4_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=183,ch=7

[Diagnostic:W7X_L53_LP5_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=0

[Diagnostic:W7X_L53_LP6_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=1

[Diagnostic:W7X_L53_LP7_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=2

[Diagnostic:W7X_L53_LP8_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=3

[Diagnostic:W7X_L53_LP9_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=4

[Diagnostic:W7X_L53_LP10_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=5

#[Diagnostic:W7X_L53_LP11_I]
#data_fetcher = %(W7Xfetcher)s
#params = CDS=82,DMD=190,ch=2

#[Diagnostic:W7X_L53_LP12_I]
#data_fetcher = %(W7Xfetcher)s
#params = CDS=82,DMD=190,ch=3

[Diagnostic:W7X_L53_LP13_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=6

[Diagnostic:W7X_L53_LP14_I]
gain =  %(1Ohm)s
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=190,ch=7

[Diagnostic:W7X_L53_LP15_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=0

[Diagnostic:W7X_L53_LP16_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=1

[Diagnostic:W7X_L53_LP17_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=2

[Diagnostic:W7X_L53_LP18_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=3

# Kaput
[Diagnostic:W7X_L53_LP19_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=4

[Diagnostic:W7X_L53_LP20_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=5

[Diagnostic:W7X_L53_LP21_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=6

[Diagnostic:W7X_L53_LP22_I]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=189,ch=7

[Diagnostic:W7X_WAVETEK]
gain = 1 V
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=192,ch=6

[Diagnostic:W7X_KEPCO]
gain = 10 V
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=192,ch=7

[Diagnostic:W7X_L57_LP1]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L57_LP1_U
channel_1 = W7X_L57_LP1_I

[Diagnostic:W7X_L57_LP10]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L57_LP1_U0
channel_1 = W7X_L57_LP1_I0

[Diagnostic:W7X_L53_LP1]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L53_LP1_U
channel_1 = W7X_L53_LP1_I

[Diagnostic:W7X_L53_LP17]
# this one is for checking cached json reads
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L53_LP1_I
channel_1 = W7X_L53_LP7_I

[Diagnostic:W7X_L57_LPALL]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L57_LP1_U
channel_1 = W7X_L57_LP1_I
# Timebase is different - should be
channel_2 = W7X_L57_LP2_I  
channel_3 = W7X_L57_LP3_I
channel_4 = W7X_L57_LP4_I
channel_5 = W7X_L57_LP5_I
channel_6 = W7X_L57_LP6_I
channel_7 = W7X_L57_LP7_I
channel_8 = W7X_L57_LP8_I
channel_9 = W7X_L57_LP9_I
channel_10 = W7X_L57_LP10_I
#channel_11 = W7X_L57_LP11_I
#channel_12 = W7X_L57_LP12_I
channel_13 = W7X_L57_LP13_I
channel_14 = W7X_L57_LP14_I
channel_15 = W7X_L57_LP15_I
channel_16 = W7X_L57_LP16_I
channel_17 = W7X_L57_LP17_I
channel_18 = W7X_L57_LP18_I
#channel_19 = W7X_L57_LP19_I  Kaput
channel_20 = W7X_L57_LP20_I

[Diagnostic:W7X_L53_LPALL]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L53_LP1_U
channel_1 = W7X_L53_LP1_I
channel_2 = W7X_L53_LP2_I  
channel_3 = W7X_L53_LP3_I
channel_4 = W7X_L53_LP4_I
channel_5 = W7X_L53_LP5_I
channel_6 = W7X_L53_LP6_I
channel_7 = W7X_L53_LP7_I
channel_8 = W7X_L53_LP8_I
channel_9 = W7X_L53_LP9_I
channel_10 = W7X_L53_LP10_I
#channel_11 = W7X_L53_LP11_I
#channel_12 = W7X_L53_LP12_I
channel_13 = W7X_L53_LP13_I
channel_14 = W7X_L53_LP14_I
channel_15 = W7X_L53_LP15_I
channel_16 = W7X_L53_LP16_I
channel_17 = W7X_L53_LP17_I
channel_18 = W7X_L53_LP18_I
channel_19 = W7X_L53_LP19_I 
channel_20 = W7X_L53_LP20_I
channel_21 = W7X_L53_LP21_I
channel_22 = W7X_L53_LP22_I

[Diagnostic:W7X_L57_LP1_8]
skip_timebase_check = True
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_L57_LP1_U
channel_1 = W7X_L57_LP1_I
# TImebase is different - should be
#channel_2 = W7X_L57_LP2_I  
channel_3 = W7X_L57_LP3_I
channel_4 = W7X_L57_LP4_I
channel_5 = W7X_L57_LP5_I
channel_6 = W7X_L57_LP6_I
channel_7 = W7X_L57_LP7_I
channel_8 = W7X_L57_LP8_I

[Diagnostic:W7X_L57_LP9_20]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_2 = W7X_L57_LP2_I  
channel_9 = W7X_L57_LP9_I
channel_10 = W7X_L57_LP10_I
#channel_11 = W7X_L57_LP11_I
#channel_12 = W7X_L57_LP12_I
channel_13 = W7X_L57_LP13_I
channel_14 = W7X_L57_LP14_I
channel_15 = W7X_L57_LP15_I
channel_16 = W7X_L57_LP16_I
channel_17 = W7X_L57_LP17_I
channel_18 = W7X_L57_LP18_I
#channel_19 = W7X_L57_LP19_I  Kaput
channel_20 = W7X_L57_LP20_I

[Diagnostic:W7X_L53_LP1_8]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
skip_timebase_check = True
channel_0 = W7X_L53_LP1_U
channel_1 = W7X_L53_LP1_I
channel_2 = W7X_L53_LP2_I  
channel_3 = W7X_L53_LP3_I
channel_4 = W7X_L53_LP4_I
channel_5 = W7X_L53_LP5_I
#channel_6 = W7X_L53_LP6_I  #noisy
channel_7 = W7X_L53_LP7_I
channel_8 = W7X_L53_LP8_I

[Diagnostic:W7X_L53_LP1_4]
# for time check diagnostics: this one seems to have the same time error - 
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
skip_timebase_check = True
channel_1 = W7X_L53_LP1_I
channel_2 = W7X_L53_LP2_I  
channel_3 = W7X_L53_LP3_I
channel_4 = W7X_L53_LP4_I

##########################################
# initial 'convenience' names
[Diagnostic:W7X_LP0]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=0

[Diagnostic:W7X_LP1]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=1

[Diagnostic:W7X_LP2]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=2

[Diagnostic:W7X_LP3]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=3

[Diagnostic:W7X_LP4]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=4

[Diagnostic:W7X_LP5]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=5

[Diagnostic:W7X_LP6]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=6

[Diagnostic:W7X_LP7]
data_fetcher = %(W7Xfetcher)s
params = CDS=82,DMD=181,ch=7

[Diagnostic:W7X_181]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_0 = W7X_LP0
channel_1 = W7X_LP1
channel_2 = W7X_LP2
channel_3 = W7X_LP3
channel_4 = W7X_LP4
channel_5 = W7X_LP5
channel_6 = W7X_LP6
channel_7 = W7X_LP7




###################
### Heliotron J ###
###################
[Device:HeliotronJ]
dev_class = pyfusion.devices.HeliotronJ.device.HeliotronJ
acq_name = HeliotronJ

[Acquisition:HeliotronJ]
acq_class = pyfusion.acquisition.HeliotronJ.acq.HeliotronJAcquisition
localigetfilepath = %(my_tmp)s/igetfiletmp

# HeliotronJ: Using the "long form" of the probes - needed if in the same file
# as LHD with the same name.
# Soon I will make another branch where the diags are device-specific


[Diagnostic:HeliotronJ_DIA135]
data_fetcher = %(HJfetcher)s
path = DIA135
length=1

#main_sigs=["DIA135","MICRO01","MICROFAST","GASPUFF#1","GASPUFF#2","NBIS"+strtrim([3,4,9,10],2)+"I","NBIS910V","ECHRG500","ICRFP"+['1','2']]

#DIA135,MICRO01,MICROFAST,GASPUFF#1,GASPUFF#2,NBIS3I,NBIS4I,NBIS9I,NBIS10I,NBIS910V,ECHRG500,ICRFP1,ICRFP2

[Diagnostic:HeliotronJ_MICRO01]
data_fetcher = %(HJfetcher)s
path = DIA135
length=1

[Diagnostic:HeliotronJ_MICROFAST]
data_fetcher = %(HJfetcher)s
path = MICROFAST
length=1


[Diagnostic:HeliotronJ_GASPUFF#1]
data_fetcher = %(HJfetcher)s
path = GASPUFF#1
length = 1

[Diagnostic:HeliotronJ_GASPUFF#2]
data_fetcher = %(HJfetcher)s
path = GASPUFF#2
length = 1

[Diagnostic:HeliotronJ_NBIS3I]
data_fetcher = %(HJfetcher)s
path = NBIS3I
length = 1

[Diagnostic:HeliotronJ_NBIS4I]
data_fetcher = %(HJfetcher)s
path = NBIS4I
length = 1

[Diagnostic:HeliotronJ_NBIS9I]
data_fetcher = %(HJfetcher)s
path = NBIS9I
length = 1

[Diagnostic:HeliotronJ_NBIS10I]
data_fetcher = %(HJfetcher)s
path = NBIS10I
length = 1

[Diagnostic:HeliotronJ_NBIS910V]
data_fetcher = %(HJfetcher)s
path = NBIS910V
length = 1

[Diagnostic:HeliotronJ_ECHRG500]
data_fetcher = %(HJfetcher)s
path = ECHRG500
length = 1

[Diagnostic:HeliotronJ_ICRFP1]
data_fetcher = %(HJfetcher)s
path = ICRFP1
length = 1

[Diagnostic:HeliotronJ_ICRFP2]
data_fetcher = %(HJfetcher)s
path = ICRFP2
length = 1

[Diagnostic:HeliotronJ_SXR021]
# channel not working? recording? e.g. 52000
data_fetcher = %(HJfetcher)s
path = SXR021
# seems like length is not used, but is required
length=1

[Diagnostic:HeliotronJ_SXR022]
data_fetcher = %(HJfetcher)s
path = SXR022
length=1

[Diagnostic:HeliotronJ_SXR023]
data_fetcher = %(HJfetcher)s
path = SXR023
length=1

[Diagnostic:HeliotronJ_SXR024]
data_fetcher = %(HJfetcher)s
path = SXR024
length=1

[Diagnostic:HeliotronJ_SXR025]
data_fetcher = %(HJfetcher)s
path = SXR025
length=1

[Diagnostic:HeliotronJ_SXR026]
data_fetcher = %(HJfetcher)s
path = SXR026
length=1

[Diagnostic:HeliotronJ_SXR027]
data_fetcher = %(HJfetcher)s
path = SXR027
length=1

[Diagnostic:HeliotronJ_SXR028]
data_fetcher = %(HJfetcher)s
path = SXR028
length=1

[Diagnostic:HeliotronJ_SXR029]
data_fetcher = %(HJfetcher)s
path = SXR029
length=1

[Diagnostic:HeliotronJ_SXR030]
data_fetcher = %(HJfetcher)s
path = SXR030
length=1

[Diagnostic:HeliotronJ_SXR031]
data_fetcher = %(HJfetcher)s
path = SXR031
length=1

[Diagnostic:HeliotronJ_SXR032]
data_fetcher = %(HJfetcher)s
path = SXR032
length=1

[Diagnostic:HeliotronJ_SXR033]
data_fetcher = %(HJfetcher)s
path = SXR033
length=1

[Diagnostic:HeliotronJ_SXR034]
data_fetcher = %(HJfetcher)s
path = SXR034
length=1

[Diagnostic:HeliotronJ_SXR035]
data_fetcher = %(HJfetcher)s
path = SXR035
length=1

[Diagnostic:HeliotronJ_SXR036]
data_fetcher = %(HJfetcher)s
path = SXR036
length=1

[Diagnostic:HeliotronJ_SXR037]
data_fetcher = %(HJfetcher)s
path = SXR037
length=1

[Diagnostic:HeliotronJ_SXR038]
data_fetcher = %(HJfetcher)s
path = SXR038
length=1

[Diagnostic:HeliotronJ_SXR039]
data_fetcher = %(HJfetcher)s
path = SXR039
length=1

[Diagnostic:HeliotronJ_SXR040]
# note recording? e.g. 52000
data_fetcher = %(HJfetcher)s
path = SXR040
length=1

[Diagnostic:HeliotronJ_SXRC_array]
# this is the faster SXR array (<! 100kHz) , with a horizontal view 
# inconsistent length 22-27 are 80k, see below (shot 52000)
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HeliotronJ_SXR022
channel_2 = HeliotronJ_SXR023
channel_3 = HeliotronJ_SXR024
channel_4 = HeliotronJ_SXR025
channel_5 = HeliotronJ_SXR026
channel_6 = HeliotronJ_SXR027
channel_7 = HeliotronJ_SXR028
channel_8 = HeliotronJ_SXR029
channel_9 = HeliotronJ_SXR030
channel_10 = HeliotronJ_SXR031
channel_11 = HeliotronJ_SXR032
channel_12 = HeliotronJ_SXR033
channel_13 = HeliotronJ_SXR034
channel_14 = HeliotronJ_SXR035
channel_15 = HeliotronJ_SXR036
channel_16 = HeliotronJ_SXR037
channel_17 = HeliotronJ_SXR038
channel_18 = HeliotronJ_SXR039
#channel_19 = 
#channel_20 = HeliotronJ_SXR040

[Diagnostic:HeliotronJ_SXRC_SMALL]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
# inconsistent length 22-27 are 80k so omit (shot 52000)
#channel_1 = HeliotronJ_SXR022
#channel_2 = HeliotronJ_SXR023
#channel_3 = HeliotronJ_SXR024
#channel_4 = HeliotronJ_SXR025
#channel_5 = HeliotronJ_SXR026
#channel_6 = HeliotronJ_SXR027
channel_7 = HeliotronJ_SXR028
channel_8 = HeliotronJ_SXR029
channel_9 = HeliotronJ_SXR030
channel_10 = HeliotronJ_SXR031
channel_11 = HeliotronJ_SXR032
channel_12 = HeliotronJ_SXR033
channel_13 = HeliotronJ_SXR034
channel_14 = HeliotronJ_SXR035
channel_15 = HeliotronJ_SXR036
channel_16 = HeliotronJ_SXR037
channel_17 = HeliotronJ_SXR038
channel_18 = HeliotronJ_SXR039
#channel_19 = 
#channel_20 = HeliotronJ_SXR040



[Diagnostic:HeliotronJ_MP1]
data_fetcher = %(HJfetcher)s
path = MP1
coords_reduced = 0.0, 0, 0.0
coord_transform = LHD_convenience
# shoud try to eliminate 'length' by returning isample fron hj_get_data.f
length = 262144

[Diagnostic:HeliotronJ_MP2]
data_fetcher = %(HJfetcher)s
path = MP2
coords_reduced = 90.0, 0, 0.0
coord_transform = LHD_convenience
length = 262144

[Diagnostic:HeliotronJ_MP3]
data_fetcher = %(HJfetcher)s
path = MP3
coords_reduced = 180.0, 0, 0.0
coord_transform = LHD_convenience
length = 262144

[Diagnostic:HeliotronJ_MP4]
data_fetcher = %(HJfetcher)s
path = MP4
coords_reduced = 270.0, 0, 0.0
coord_transform = LHD_convenience
length = 262144

[Diagnostic:HeliotronJ_PMP1]
data_fetcher = %(HJfetcher)s
path = PMP1
length = 262144

[Diagnostic:HeliotronJ_PMP2]
data_fetcher = %(HJfetcher)s
path = PMP2
length = 262144

[Diagnostic:HeliotronJ_PMP3]
data_fetcher = %(HJfetcher)s
path = PMP3
length = 262144

[Diagnostic:HeliotronJ_PMP4]
data_fetcher = %(HJfetcher)s
path = PMP4
length = 262144

[Diagnostic:HeliotronJ_PMP5]
data_fetcher = %(HJfetcher)s
path = PMP5
length = 262144

[Diagnostic:HeliotronJ_PMP6]
data_fetcher = %(HJfetcher)s
path = PMP6
length = 262144

[Diagnostic:HeliotronJ_PMP7]
data_fetcher = %(HJfetcher)s
path = PMP7
length = 262144

[Diagnostic:HeliotronJ_PMP8]
data_fetcher = %(HJfetcher)s
path = PMP8
length = 262144

[Diagnostic:HeliotronJ_PMP9]
data_fetcher = %(HJfetcher)s
path = PMP9
length = 262144

[Diagnostic:HeliotronJ_PMP10]
data_fetcher = %(HJfetcher)s
path = PMP10
length = 262144

[Diagnostic:HeliotronJ_PMP11]
data_fetcher = %(HJfetcher)s
path = PMP11
length = 262144

[Diagnostic:HeliotronJ_PMP12]
data_fetcher = %(HJfetcher)s
path = PMP12
length = 262144

[Diagnostic:HeliotronJ_PMP13]
data_fetcher = %(HJfetcher)s
path = PMP13
length = 262144

[Diagnostic:HeliotronJ_PMP14]
data_fetcher = %(HJfetcher)s
path = PMP14
length = 262144

[Diagnostic:HeliotronJ_MP_array]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HeliotronJ_MP1
channel_2 = HeliotronJ_MP2
channel_3 = HeliotronJ_MP3
channel_4 = HeliotronJ_MP4

[Diagnostic:HeliotronJ_PMP_array]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HeliotronJ_PMP1
channel_2 = HeliotronJ_PMP2
channel_3 = HeliotronJ_PMP3
channel_4 = HeliotronJ_PMP4
channel_5 = HeliotronJ_PMP5
channel_6 = HeliotronJ_PMP6
channel_7 = HeliotronJ_PMP7
channel_8 = HeliotronJ_PMP8
channel_9 = HeliotronJ_PMP9
channel_10 = HeliotronJ_PMP10
channel_11 = HeliotronJ_PMP11
channel_12 = HeliotronJ_PMP12
channel_13 = HeliotronJ_PMP13
channel_14 = HeliotronJ_PMP14

[Diagnostic:HeliotronJ_ALL]
# all probes, toroidal last, both closed.
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HeliotronJ_PMP1
channel_2 = HeliotronJ_PMP2
channel_3 = HeliotronJ_PMP3
channel_4 = HeliotronJ_PMP4
channel_5 = HeliotronJ_PMP5
channel_6 = HeliotronJ_PMP6
channel_7 = HeliotronJ_PMP7
channel_8 = HeliotronJ_PMP8
channel_9 = HeliotronJ_PMP9
channel_10 = HeliotronJ_PMP10
channel_11 = HeliotronJ_PMP11
channel_12 = HeliotronJ_PMP12
channel_13 = HeliotronJ_PMP13
channel_14 = HeliotronJ_PMP14
channel_15 = HeliotronJ_PMP1
channel_16 = HeliotronJ_MP1
channel_17 = HeliotronJ_MP2
channel_18 = HeliotronJ_MP3
channel_19 = HeliotronJ_MP4
channel_20 = HeliotronJ_MP1

############
### TJII ###
############
[Device:TJII]
dev_class = pyfusion.devices.TJII.device.TJII
acq_name = TJII

[Acquisition:TJII]
acq_class = pyfusion.acquisition.TJII.acq.TJIIAcquisition

[Diagnostic:TJII_mirnov_5p_105]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P_05
invert = false

[Diagnostic:TJII_mirnov_5p_104]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P_04
invert = false

[Diagnostic:TJII_mirnov_5p_103]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P_03
invert = false

[Diagnostic:TJII_mirnov_5p_102]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P_02
invert = false

[Diagnostic:TJII_mirnov_5p_101]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P_01
invert = false

[Diagnostic:TJII_mirnov_5p_1]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P1
invert = false

[Diagnostic:TJII_mirnov_5p_2]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P2
invert = true

[Diagnostic:TJII_mirnov_5p_3]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P3
invert = false

[Diagnostic:TJII_mirnov_5p_4]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P4
invert = false

[Diagnostic:TJII_mirnov_5p_5]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P5
invert = false

[Diagnostic:TJII_mirnov_5p_6]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P6
invert = false

[Diagnostic:TJII_mirnov_5p_7]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P7
invert = tru

[Diagnostic:TJII_mirnov_5p_8]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P8
invert = false

[Diagnostic:TJII_mirnov_5p_9]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P9
invert = false

[Diagnostic:TJII_mirnov_5p_10]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P10
invert = false

[Diagnostic:TJII_mirnov_5p_11]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P11
invert = false

[Diagnostic:TJII_mirnov_5p_12]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P12
invert = false

[Diagnostic:TJII_mirnov_5p_13]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P13
invert = false

[Diagnostic:TJII_mirnov_5p_14]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P14
invert = true

[Diagnostic:TJII_mirnov_5p_15]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P15
invert = false

[Diagnostic:TJII_mirnov_5p_16]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P16
invert = false

[Diagnostic:TJII_mirnov_5p_17]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P17
invert = false

[Diagnostic:TJII_mirnov_5p_18]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P18
invert = false

[Diagnostic:TJII_mirnov_5p_19]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P19
invert = false

[Diagnostic:TJII_mirnov_5p_20]
data_fetcher = pyfusion.acquisition.TJII.fetch.TJIIDataFetcher
senal=MID5P20
invert = true

[Diagnostic:TJII_mirnov_array_1]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
t_min = 1020.0
t_max = 1300.0
skip_timebase_check = true
channel_1 = TJII_mirnov_5p_1
channel_2 = TJII_mirnov_5p_2
channel_3 = TJII_mirnov_5p_3
channel_4 = TJII_mirnov_5p_4
channel_5 = TJII_mirnov_5p_5
channel_6 = TJII_mirnov_5p_6
channel_7 = TJII_mirnov_5p_7
channel_8 = TJII_mirnov_5p_8
channel_9 = TJII_mirnov_5p_9
channel_10 = TJII_mirnov_5p_10
channel_11 = TJII_mirnov_5p_11
channel_12 = TJII_mirnov_5p_12
channel_13 = TJII_mirnov_5p_13
channel_14 = TJII_mirnov_5p_14
channel_15 = TJII_mirnov_5p_15


###################
### LHD Section ###
###################
[Device:LHD]
dev_class = pyfusion.devices.LHD.device.LHD
acq_name = LHD

[Acquisition:LHD]
acq_class = pyfusion.acquisition.LHD.acq.LHDAcquisition
#localigetfilepath = /LINUX23/home/bdb112/datamining/cache/
#localigetfilepath = /tmp/blackwell/igetfiletmp
localigetfilepath = %(my_tmp)s/igetfiletmp

[CoordTransform:LHD_convenience]
toroidal = pyfusion.devices.LHD.coords.LHDConvenienceCoordTransform

# LHD section - uses short names to make labels clearer

# Added ~2013 for the Br flux loops
#  The angles maybe guesses
[Diagnostic:VSL0011]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 33
coords_reduced = 00.0, -165, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0012]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 34
coords_reduced = 00.0, -135, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0013]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 35
coords_reduced = 00.0, -105, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0023]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 38
coords_reduced = 00.0, -75, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0022]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 37
coords_reduced = 00.0, -45, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0021]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 36
coords_reduced = 00.0, -15, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0071]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 51
coords_reduced = 00.0, 15, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0072]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 52
coords_reduced = 00.0, 45, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0073]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 53
coords_reduced = 00.0, 75, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0081]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 54
coords_reduced = 00.0, 105, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0082]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 55
coords_reduced = 00.0, 135, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0083]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 56
coords_reduced = 00.0, 165, 0.0
coord_transform = LHD_convenience




[Diagnostic:VSL0063]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 50
coords_reduced = 00.0, -165, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0062]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 49
coords_reduced = 00.0, -135, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0061]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 48
coords_reduced = 00.0, -105, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0043]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 44
coords_reduced = 00.0, -75, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0042]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 43
coords_reduced = 00.0, -45, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0041]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 42
coords_reduced = 00.0, -15, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0031]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 39
coords_reduced = 00.0, 15, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0032]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 40
coords_reduced = 00.0, 45, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0033]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 41
coords_reduced = 00.0, 75, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0051]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 45
coords_reduced = 00.0, 105, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0052]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 46
coords_reduced = 00.0, 135, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL0053]
data_fetcher = %(LHDfetcher)s
diag_name = Magnetics3lab1
channel_number = 47
coords_reduced = 00.0, 165, 0.0
coord_transform = LHD_convenience


[Diagnostic:VSL_SMALL]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = -VSL0011
channel_2 = -VSL0063

[Diagnostic:VSL_6]
# no need for a RAW version here - they all have minus signs.
# a small subset, the bare mininum.  Not clear we can sitinguidh M=1, M=2
# mostly spaced at 60 - note that arder alternates between opposite sets
# That is, 63 and 11 are together (as they were is VSL_SMALL)
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 =  -VSL0011
channel_5 =  -VSL0013
channel_9 =  -VSL0022
channel_2 =  -VSL0063
channel_6 =  -VSL0061
channel_10 = -VSL0042


[Diagnostic:VSL_ALL_RAW]
# mostly spaced at 30 - note that arder alternates between opposite sets
# That is, 63 and 11 are together (as they were in VSL_SMALL, VSL_6)
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = VSL0011
channel_3 = VSL0012
channel_5 = VSL0013
channel_7 = VSL0023
channel_9 = VSL0022
channel_11 = VSL0021
channel_13 = VSL0071
channel_15 = VSL0072
channel_17 = VSL0073
channel_29 = VSL0081
channel_21 = VSL0082
channel_23 = VSL0083

channel_2 = VSL0063
channel_4 = VSL0062
channel_6 = VSL0061
channel_8 = VSL0043
channel_10 = VSL0042
channel_12 = VSL0041
channel_14 = VSL0031
channel_16 = VSL0032
channel_18 = VSL0033
channel_20 = VSL0051
channel_22 = VSL0052
channel_24 = VSL0053

[Diagnostic:VSL_ALL]
# this includes sign(i.e. gain=-1) corrections
# mostly spaced at 30 - note that arder alternates between opposite sets
# That is, 63 and 11 are together (as they were in VSL_SMALL, VSL_6)
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 =  -VSL0011
channel_3 =   VSL0012
channel_5 =  -VSL0013
channel_7 =   VSL0023
channel_9 =  -VSL0022
channel_11 =  VSL0021
channel_13 = -VSL0071
channel_15 =  VSL0072
channel_17 = -VSL0073
channel_29 =  VSL0081
channel_21 = -VSL0082
channel_23 =  VSL0083

channel_2  = -VSL0063
channel_4  = -VSL0062
channel_6  = -VSL0061
channel_8  =  VSL0043
channel_10 = -VSL0042
channel_12 =  VSL0041
channel_14 = -VSL0031
channel_16 =  VSL0032
channel_18 =  VSL0033
channel_20 = -VSL0051
channel_22 = -VSL0052
channel_24 = -VSL0053


[Diagnostic:MP1]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 18
coords_reduced = 18.0, 0.0, 0.0
coord_transform = LHD_convenience

gain = 1

[Diagnostic:MP2]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 17
coords_reduced = 90.0, 0.0, 0.0
coord_transform = LHD_convenience

gain = 1

[Diagnostic:MP3]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 22
coords_reduced = 126.0, 0.0, 0.0
coord_transform = LHD_convenience

gain = 1

[Diagnostic:MP4]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 21
coords_reduced = 198.0, 0.0, 0.0
coord_transform = LHD_convenience

gain = 1

[Diagnostic:MP5]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 20
coords_reduced = 270.0, 0.0, 0.0
coord_transform = LHD_convenience

##gain=-1

## DONT use [Diagnostic:-MP5] should only be in a channel list
[Diagnostic:delete-MP5]
data_fetcher = %(LHDfetcher)s
diag_name = -MP5
channel_number = 20
coords_reduced = 270.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:MP6]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 19
coords_reduced = 342.0, 0.0, 0.0
coord_transform = LHD_convenience

gain = 1

[Diagnostic:MP]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = MP1
channel_2 = MP2
channel_3 = MP3
channel_4 = MP4
channel_5 = MP5
channel_6 = MP6

[Diagnostic:MP26]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_2 = MP2
channel_3 = MP3
channel_4 = MP4
channel_5 = MP5
channel_6 = MP6

[Diagnostic:MP2010]
# Ogawa's flip information dated 11/10/2010 "Magnetic Probe"
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = -MP1
channel_2 = MP2
channel_3 = -MP3
channel_4 = MP4
channel_5 = MP5
channel_6 = MP6

[Diagnostic:MPflip5]
# obselete - this is incorrect - just keep for comparisons with old analysis.
# this flips 5  but don't use for fetch local - it is already flipped there.
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = MP1
channel_2 = MP2
channel_3 = MP3
channel_4 = MP4
channel_5 = -MP5
channel_6 = MP6


[Diagnostic:MP_SMALL]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = MP1
channel_2 = MP2


[Diagnostic:HMP01]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 28
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP02]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 34
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP03]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 27
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP04]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 33
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP05]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 26
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience

##gain=-1

[Diagnostic:HMP06]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 32
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP07]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 25
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP08]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 31
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP09]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 24
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP10]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 30
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP11]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 23
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP12]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 29
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:HMP13]
data_fetcher = %(LHDfetcher)s
diag_name = FMD
channel_number = 20
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience

#gain = -1 for some - not 27233

[Diagnostic:HMPno12]
# for shots where 12 is dead
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HMP01
channel_2 = HMP02
channel_3 = HMP03
channel_4 = HMP04
channel_5 = HMP05
channel_6 = HMP06
channel_7 = HMP07
channel_8 = HMP08
channel_9 = HMP09
channel_10 = HMP10
channel_11 = HMP11
channel_13 = HMP13

[Diagnostic:HMP]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HMP01
channel_2 = HMP02
channel_3 = HMP03
channel_4 = HMP04
channel_5 = HMP05
channel_6 = HMP06
channel_7 = HMP07
channel_8 = HMP08
channel_9 = HMP09
channel_10 = HMP10
channel_11 = HMP11
channel_12 = HMP12
channel_13 = HMP13

# Useful for blind clustering, and phase flip tests.
[Diagnostic:MPALL]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = MP1
channel_2 = MP2
channel_3 = MP3
channel_4 = MP4
channel_5 = MP5
channel_6 = MP6
channel_7 = HMP01
channel_8 = HMP02
channel_9 = HMP03
channel_10 = HMP04
channel_11 = HMP05
channel_12 = HMP06
channel_13 = HMP07
channel_14 = HMP08
channel_15 = HMP09
channel_16 = HMP10
channel_17 = HMP11
channel_18 = HMP12
channel_19 = HMP13
[Diagnostic:MP2010HMPno612]
# combined, for shots where 6,12 is dead
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = HMP01
channel_2 = HMP02
channel_3 = HMP03
channel_4 = HMP04
channel_5 = HMP05
#channel_6 = HMP06
channel_6 = HMP07
channel_7 = HMP08
channel_8 = HMP09
channel_9 = HMP10
channel_10 = HMP11
# to compensate the non existent flip
#channel_11 = -HMP13 # only for data in npz files written before Dec 2012
channel_11 = HMP13  # this is correct for LHD original data
channel_12 = -MP1
channel_13 = MP2
channel_14 = -MP3
channel_15 = MP4
#channel_16 = -MP5 # only for data in npz files written before Dec 2012
channel_16 = MP5
channel_17 = MP6

# David's full name style
[Diagnostic:LHD_mirnov_toroidal_1]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 18
coords_reduced = 18.0, 0.0, 0.0
coord_transform = LHD_convenience
#filepath = /tmp/pyfusion


[Diagnostic:LHD_mirnov_toroidal_2]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 17
coords_reduced = 90.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_toroidal_3]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 22
coords_reduced = 126.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_toroidal_4]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 21
coords_reduced = 198.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_toroidal_5]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 20
coords_reduced = 270.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_toroidal_6]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 19
coords_reduced = 342.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_Mirnov_toroidal]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = LHD_mirnov_toroidal_1
channel_2 = LHD_mirnov_toroidal_2
channel_3 = LHD_mirnov_toroidal_3
channel_4 = LHD_mirnov_toroidal_4
channel_5 = LHD_mirnov_toroidal_5
channel_6 = LHD_mirnov_toroidal_6

[Diagnostic:LHD_Mirnov_small]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = LHD_mirnov_toroidal_1
channel_2 = LHD_mirnov_toroidal_2


[Diagnostic:LHD_mirnov_helical_1]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 28
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_2]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 34
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_3]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 27
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_4]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 33
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_5]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 26
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_6]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 32
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_7]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 25
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_8]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 31
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_9]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 24
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_10]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 30
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_11]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 23
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_12]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 29
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_mirnov_helical_13]
data_fetcher = pyfusion.acquisition.LHD.fetch.LHDTimeseriesDataFetcher
diag_name = FMD
channel_number = 20
coords_reduced = 00.0, 0.0, 0.0
coord_transform = LHD_convenience


[Diagnostic:LHD_Mirnov_helical]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = LHD_mirnov_helical_1
channel_2 = LHD_mirnov_helical_2
channel_3 = LHD_mirnov_helical_3
channel_4 = LHD_mirnov_helical_4
channel_5 = LHD_mirnov_helical_5
channel_6 = LHD_mirnov_helical_6
channel_7 = LHD_mirnov_helical_7
channel_8 = LHD_mirnov_helical_8
channel_9 = LHD_mirnov_helical_9
channel_10 = LHD_mirnov_helical_10
channel_11 = LHD_mirnov_helical_11
channel_12 = LHD_mirnov_helical_12
channel_13 = LHD_mirnov_helical_13

##################
### H1 section ###
##################
[Device:H1Local]
dev_class = pyfusion.devices.H1.device.H1
acq_name = H1LocalAcq

[Acquisition:H1LocalAcq]
acq_class = pyfusion.acquisition.MDSPlus.acq.MDSPlusAcquisition
h1data_path = /data/mdsplus/h1data
mirnov_path = /data/mdsplus/h1data

[Diagnostic:ElectronDensity_1]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_1
# works
#mds_path = \h1data::top.electr_dens.NE_HET:NE_1
# as of Nov 2, the following doesn't work
#mds_path = \electr_dens::top.NE_HET:NE_1

[Diagnostic:ElectronDensity_2]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_2

[Diagnostic:ElectronDensity_3]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_3

[Diagnostic:ElectronDensity_4]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_4

[Diagnostic:ElectronDensity_5]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_5

[Diagnostic:ElectronDensity_6]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_6

[Diagnostic:ElectronDensity_7]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_7

[Diagnostic:ElectronDensity_8]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_8

[Diagnostic:ElectronDensity_9]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_9

[Diagnostic:ElectronDensity_10]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_10

[Diagnostic:ElectronDensity_11]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_11

[Diagnostic:ElectronDensity_12]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_12

[Diagnostic:ElectronDensity_13]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_13

[Diagnostic:ElectronDensity_14]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_14

[Diagnostic:ElectronDensity_15]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_15

[Diagnostic:ElectronDensity_16]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_16

[Diagnostic:ElectronDensity_17]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_17

[Diagnostic:ElectronDensity_18]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_18

[Diagnostic:ElectronDensity_19]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_19

[Diagnostic:ElectronDensity_20]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_20

# Note: the multi diag is almost the same, no underscore
[Diagnostic:ElectronDensity_21]
data_fetcher = %(H1fetcher)s
mds_path = %(ne_path)s:NE_21

# this one for the JSPS example - drop 4 dodgy edge channels
[Diagnostic:ElectronDensity15]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
#channel_1 = ElectronDensity_11
#channel_2 = ElectronDensity_10
#channel_3 = ElectronDensity_9  # goes negative sometimes
channel_4 = ElectronDensity_8
channel_5 = ElectronDensity_7
channel_6 = ElectronDensity_6
channel_7 = ElectronDensity_5
channel_8 = ElectronDensity_4
channel_9 = ElectronDensity_3
channel_10 = ElectronDensity_2
channel_11 = ElectronDensity_1
channel_12 = ElectronDensity_12
channel_13 = ElectronDensity_13
channel_14 = ElectronDensity_14
channel_15 = ElectronDensity_15
#channel_16 = ElectronDensity_16
channel_17 = ElectronDensity_17
channel_18 = ElectronDensity_18
channel_19 = ElectronDensity_19
#channel_20 = ElectronDensity_20
#channel_21 = ElectronDensity_21


[Device:H1]
dev_class = pyfusion.devices.H1.device.H1
acq_name = MDS_h1

[Acquisition:MDS_h1]
acq_class = pyfusion.acquisition.MDSPlus.acq.MDSPlusAcquisition
server = h1svr.anu.edu.au
# localhost if you have an mdsip server on your machine - i.e. full mdsplus installation
#server = localhost

[CoordTransform:H1_mirnov]
magnetic = pyfusion.devices.H1.coords.MirnovKhMagneticCoordTransform

[Diagnostic:H1_mirnov_array_1_coil_1]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_14:input_1
coords_cylindrical = 1.114, 0.7732, 0.355
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_2]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_14:input_2
coords_cylindrical = 1.185, 0.7732, 0.289
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_3]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_14:input_3
coords_cylindrical = 1.216, 0.7732, 0.227
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_4]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_14:input_4
coords_cylindrical = 1.198, 0.7732, 0.137
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_5]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 1.129, 0.7732, 0.123
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_6]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 1.044, 0.7732, 0.128
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_7]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_14:input_6
coords_cylindrical = 0.963, 0.7732, 0.112
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_8]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_15:input_1
coords_cylindrical = 0.924, 0.7732, 0.087
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_9]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_15:input_2
coords_cylindrical = 0.902, 0.7732, 0.052
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_10]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_15:input_3
coords_cylindrical = 0.900, 0.7732, -0.008
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_11]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.925, 0.7732, -0.073
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_12]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.964, 0.7732, -0.169
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_13]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.897, 0.7732, -0.238
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_14]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.821, 0.7732, -0.221
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_15]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_16:input_2
coords_cylindrical = 0.696, 0.7732, -0.106
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_16]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_16:input_3
coords_cylindrical = 0.652, 0.7732, 0.036
coord_transform = H1_mirnov
                             
[Diagnostic:H1_mirnov_array_1_coil_17]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_16:input_4
coords_cylindrical = 0.676, 0.7732, 0.193
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_18]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.operations.mirnov:a14_16:input_6
coords_cylindrical = 0.790, 0.7732, 0.326
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_19]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.806, 0.7732, 0.336
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1_coil_20]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_tree = None
mds_path = None
coords_cylindrical = 0.934, 0.7732, 0.383
coord_transform = H1_mirnov

[Diagnostic:H1_mirnov_array_1]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = H1_mirnov_array_1_coil_1
channel_2 = H1_mirnov_array_1_coil_2
channel_3 = H1_mirnov_array_1_coil_3
channel_4 = H1_mirnov_array_1_coil_4
#channel_5 = H1_mirnov_array_1_coil_5
#channel_6 = H1_mirnov_array_1_coil_6
channel_7 = H1_mirnov_array_1_coil_7
channel_8 = H1_mirnov_array_1_coil_8
channel_9 = H1_mirnov_array_1_coil_9
channel_10 = H1_mirnov_array_1_coil_10
#channel_11 = H1_mirnov_array_1_coil_11
#channel_12 = H1_mirnov_array_1_coil_12
#channel_13 = H1_mirnov_array_1_coil_13
#channel_14 = H1_mirnov_array_1_coil_14
channel_15 = H1_mirnov_array_1_coil_15
channel_16 = H1_mirnov_array_1_coil_16
channel_17 = H1_mirnov_array_1_coil_17
channel_18 = H1_mirnov_array_1_coil_18
#channel_19 = H1_mirnov_array_1_coil_19
#channel_20 = H1_mirnov_array_1_coil_20

[Diagnostic:H1_mirnov_small]
data_fetcher = pyfusion.acquisition.base.MultiChannelFetcher
channel_1 = H1_mirnov_array_1_coil_7
channel_2 = H1_mirnov_array_1_coil_8
channel_3 = H1_mirnov_array_1_coil_9

[Diagnostic:H1_ne_centre]
data_fetcher = pyfusion.acquisition.H1.fetch.H1DataFetcher
mds_path = \h1data::top.electr_dens.ne_het:ne_centre

