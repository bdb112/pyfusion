# This shows pyfusion code with the SQL generated
import pyfusion
diag = pyfusion.session.query(pyfusion.Diagnostic).filter_by(name='mirnov_small').one()
#     SELECT diagnostics.name, diagnostics.ordered_channel_list, diagnostics.id 
#     FROM diagnostics 
#     WHERE diagnostics.name = %s['mirnov_small'] ORDER BY diagnostics.id  LIMIT 0, 2
diag.ordered_channel_list
#  ['mirnov_1_4', 'mirnov_1_7', 'mirnov_1_8', 'mirnov_1_9']

from pyfusion.datamining.clustering.core import FluctuationStructureSet
fs_set_name = 'test_flucstrucs'
fs_set = pyfusion.session.query(FluctuationStructureSet).filter_by(name=fs_set_name).one()
#   SELECT dm_fs_set.id, dm_fs_set.name
#   FROM dm_fs_set 
#   WHERE dm_fs_set.name = %s ['test_flucstrucs'] ORDER BY dm_fs_set.id  LIMIT 0, 2

from pyfusion.datamining.clustering.core import FluctuationStructure
fs_list = pyfusion.session.query(FluctuationStructure).filter('energy>0.5').all()
#   SELECT dm_fs.energy, dm_fs.svd_id, dm_fs.gamma_threshold, dm_fs.frequency, dm_fs.id, dm_fs.set_id 
#   FROM dm_fs 
#   WHERE energy>0.5 ORDER BY dm_fs.id
fs0=fs_list[0]
fs0.energy
# Out[45]: 0.613174

svd=fs0.svd
#   SELECT svds.timebase AS svds_timebase, svds.normalised AS svds_normalised, svds.energy AS svds_energy, svds.channel_norms AS svds_channel_norms, svds.diagnostic_id AS svds_diagnostic_id, svds.timesegment_id AS svds_timesegment_id, svds.entropy AS svds_entropy, svds.used_channels AS svds_used_channels, svds.id AS svds_id 
#   FROM svds 
#   WHERE svds.id = %s[1L]

svd.entropy
# Out[76]: 0.51591100000000001

svd.channel_norms
# Out[75]:  [0.25374734747961331, 1.5066500120733466, 1.914500595092681, 1.5544744757774267]


fs0.svs
SELECT svs.number AS svs_number, svs.value AS svs_value, svs.store_chrono AS svs_store_chrono, svs.topo AS svs_topo, svs._chrono AS svs__chrono, svs.svd_id AS svs_svd_id, svs.id AS svs_id 
FROM svs, flucstruc_svs 
WHERE %s[1L] = flucstruc_svs.flucstruc_id AND svs.id = flucstruc_svs.sv_id
??
